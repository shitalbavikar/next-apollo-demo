{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Shital.r.bavikar/dev/reactjs/demo/next-apollo-demo/client/components/Users/Users.tsx\";\nimport React, { useRef, useEffect } from \"react\";\nimport uniqid from 'uniqid';\nimport { useQuery } from \"@apollo/client\";\nimport { Spinner } from \"../Spinner/Spinner\";\nimport styles from './Users.module.css';\nimport { UserCard } from './UserCard';\nimport { GET_USERS_INFO } from '../../lib/queries/getUsersInfo';\nexport const Users = () => {\n  const messageRef = useRef(null);\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_USERS_INFO, {\n    variables: {\n      after: null\n    }\n  });\n  useEffect(() => {\n    var _messageRef$current;\n\n    return (_messageRef$current = messageRef.current) === null || _messageRef$current === void 0 ? void 0 : _messageRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  });\n\n  const loadMoreUsersHandler = () => {\n    const {\n      endCursor\n    } = data.users.pageInfo;\n    fetchMore({\n      variables: {\n        after: endCursor\n      },\n      updateQuery: (prevResult, {\n        fetchMoreResult\n      }) => {\n        fetchMoreResult.users.edges = [...prevResult.users.edges, ...fetchMoreResult.users.edges];\n        return fetchMoreResult;\n      }\n    });\n  };\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 20\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n\n  if (data && data.users.edges.length > 0) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.usersListTitle,\n        \"data-test\": \"users-list-title\",\n        children: \"Users List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.usersWrapper,\n        \"data-test\": \"users-list-wrapper\",\n        children: data.users.edges.map(user => {\n          return /*#__PURE__*/_jsxDEV(UserCard, {\n            userInfo: user.node\n          }, uniqid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userActions,\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadMoreUsersHandler(),\n          children: \"Load more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this);\n  }\n};","map":{"version":3,"sources":["/Users/Shital.r.bavikar/dev/reactjs/demo/next-apollo-demo/client/components/Users/Users.tsx"],"names":["React","useRef","useEffect","uniqid","useQuery","Spinner","styles","UserCard","GET_USERS_INFO","Users","messageRef","loading","error","data","fetchMore","variables","after","current","scrollIntoView","behavior","loadMoreUsersHandler","endCursor","users","pageInfo","updateQuery","prevResult","fetchMoreResult","edges","length","usersListTitle","usersWrapper","map","user","node","userActions"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,cAAR,QAA6B,gCAA7B;AAGA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,QAAMC,UAAU,GAAGT,MAAM,CAAiB,IAAjB,CAAzB;AAEA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,MAAsCV,QAAQ,CAACI,cAAD,EAAiB;AACnEO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AADwD,GAAjB,CAApD;AAIAd,EAAAA,SAAS,CAAC;AAAA;;AAAA,kCAAMQ,UAAU,CAACO,OAAjB,wDAAM,oBAAoBC,cAApB,CAAmC;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAnC,CAAN;AAAA,GAAD,CAAT;;AAEA,QAAMC,oBAAoB,GAAG,MAAM;AACjC,UAAM;AAACC,MAAAA;AAAD,QAAcR,IAAI,CAACS,KAAL,CAAWC,QAA/B;AAEAT,IAAAA,SAAS,CAAC;AACRC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEK;AAAT,OADH;AAERG,MAAAA,WAAW,EAAE,CAACC,UAAD,EAAkB;AAAEC,QAAAA;AAAF,OAAlB,KAA+C;AAC1DA,QAAAA,eAAe,CAACJ,KAAhB,CAAsBK,KAAtB,GAA8B,CAC5B,GAAGF,UAAU,CAACH,KAAX,CAAiBK,KADQ,EAE5B,GAAGD,eAAe,CAACJ,KAAhB,CAAsBK,KAFG,CAA9B;AAIA,eAAOD,eAAP;AACD;AARO,KAAD,CAAT;AAUH,GAbC;;AAeA,MAAGd,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEV,MAAID,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEb,MAAIE,IAAI,IAAIA,IAAI,CAACS,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,GAA0B,CAAtC,EAAyC;AACrC,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BAEI;AAAI,QAAA,SAAS,EAAEtB,MAAM,CAACuB,cAAtB;AAAsC,qBAAU,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAEvB,MAAM,CAACwB,YAAvB;AAAqC,qBAAU,oBAA/C;AAAA,kBACKjB,IAAI,CAACS,KAAL,CAAWK,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,IAAI;AAC9B,8BAAO,QAAC,QAAD;AAAyB,YAAA,QAAQ,EAAIA,IAAI,CAACC;AAA1C,aAAe9B,MAAM,EAArB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAA0D,SADzD;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI;AAAK,QAAA,SAAS,EAAEG,MAAM,CAAC4B,WAAvB;AAAoC,QAAA,GAAG,EAAExB,UAAzC;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAE,MAAMU,oBAAoB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcH;AACF,CA5CM","sourcesContent":["import React, {useRef, useEffect} from \"react\";\nimport uniqid from 'uniqid';\nimport { useQuery } from \"@apollo/client\";\nimport {Spinner} from \"../Spinner/Spinner\";\nimport styles from './Users.module.css';\nimport {UserCard} from './UserCard';\nimport {GET_USERS_INFO} from '../../lib/queries/getUsersInfo';\n\n\nexport const Users = () => {\n  const messageRef = useRef<HTMLDivElement>(null);\n  \n  const { loading, error, data, fetchMore } = useQuery(GET_USERS_INFO, {\n    variables: { after: null }\n  });\n  \n  useEffect(() => messageRef.current?.scrollIntoView({behavior: \"smooth\"}));\n  \n  const loadMoreUsersHandler = () => {\n    const {endCursor} = data.users.pageInfo;\n      \n    fetchMore({\n      variables: { after: endCursor },\n      updateQuery: (prevResult: any, { fetchMoreResult }: any) => {\n        fetchMoreResult.users.edges = [\n          ...prevResult.users.edges,\n          ...fetchMoreResult.users.edges\n        ];\n        return fetchMoreResult;\n      }});\n     \n}\n\n  if(error) return <div>Error</div>;\n\n  if (loading) return <Spinner/>;\n  \n  if (data && data.users.edges.length > 0) {\n      return (\n        <React.Fragment>\n          {/* <Suspense fallback={<Spinner />}> */}\n            <h3 className={styles.usersListTitle} data-test=\"users-list-title\">Users List</h3>\n            <div className={styles.usersWrapper} data-test=\"users-list-wrapper\">\n                {data.users.edges.map(user => { \n                return <UserCard key={uniqid()} userInfo = {user.node}/> })}\n            </div>\n          {/* </Suspense> */}\n            <div className={styles.userActions} ref={messageRef}>\n              <button onClick={() => loadMoreUsersHandler()}>Load more</button>\n            </div>\n        </React.Fragment>\n      );\n  }\n} "]},"metadata":{},"sourceType":"module"}