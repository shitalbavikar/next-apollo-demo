{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/Shital.r.bavikar/dev/reactjs/demo/next-apollo-demo/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/Shital.r.bavikar/dev/reactjs/demo/next-apollo-demo/client/components/Users/Users.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport uniqid from 'uniqid';\nimport { useQuery } from \"@apollo/client\";\nimport { Spinner } from \"../Spinner/Spinner\";\nimport styles from './Users.module.css';\nimport { UserCard } from './UserCard';\nimport { GET_USERS_INFO } from '../../lib/queries/getUsersInfo';\nexport var Users = function Users() {\n  _s();\n\n  var messageRef = useRef(null);\n\n  var _useQuery = useQuery(GET_USERS_INFO, {\n    variables: {\n      after: null\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      fetchMore = _useQuery.fetchMore; // const handleLoadMoreClick = (event: any) => {\n  //   console.log(messageRef.current && messageRef.current.contains(event.target));\n  //   if (messageRef.current && messageRef.current.contains(event.target)) {\n  //     messageRef.current.scrollIntoView({  behavior: 'smooth' });\n  //   }\n  // }\n\n\n  useEffect(function () {\n    var _messageRef$current;\n\n    return (_messageRef$current = messageRef.current) === null || _messageRef$current === void 0 ? void 0 : _messageRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  });\n\n  var loadMoreUsersHandler = function loadMoreUsersHandler() {\n    var endCursor = data.users.pageInfo.endCursor;\n    fetchMore({\n      variables: {\n        after: endCursor\n      },\n      updateQuery: function updateQuery(prevResult, _ref) {\n        var fetchMoreResult = _ref.fetchMoreResult;\n        fetchMoreResult.users.edges = [].concat(_toConsumableArray(prevResult.users.edges), _toConsumableArray(fetchMoreResult.users.edges));\n        return fetchMoreResult;\n      }\n    });\n  };\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 20\n  }, _this);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, _this);\n\n  if (data && data.users.edges.length > 0) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.usersWrapper,\n        children: data.users.edges.map(function (user) {\n          return /*#__PURE__*/_jsxDEV(UserCard, {\n            userInfo: user.node\n          }, uniqid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userActions,\n        ref: messageRef,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.loadMoreButton,\n          onClick: function onClick() {\n            return loadMoreUsersHandler();\n          },\n          children: \" Load more..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, _this);\n  }\n};\n\n_s(Users, \"3O7G/Olsew0mPmMxQ1/uqDRNBPU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/Shital.r.bavikar/dev/reactjs/demo/next-apollo-demo/client/components/Users/Users.tsx"],"names":["React","useRef","useEffect","uniqid","useQuery","Spinner","styles","UserCard","GET_USERS_INFO","Users","messageRef","variables","after","loading","error","data","fetchMore","current","scrollIntoView","behavior","loadMoreUsersHandler","endCursor","users","pageInfo","updateQuery","prevResult","fetchMoreResult","edges","length","usersWrapper","map","user","node","userActions","loadMoreButton"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,cAAR,QAA6B,gCAA7B;AAGA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AACzB,MAAMC,UAAU,GAAGT,MAAM,CAAiB,IAAjB,CAAzB;;AADyB,kBAGmBG,QAAQ,CAACI,cAAD,EAAiB;AACnEG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AADwD,GAAjB,CAH3B;AAAA,MAGjBC,OAHiB,aAGjBA,OAHiB;AAAA,MAGRC,KAHQ,aAGRA,KAHQ;AAAA,MAGDC,IAHC,aAGDA,IAHC;AAAA,MAGKC,SAHL,aAGKA,SAHL,EAMzB;AACA;AACA;AACA;AACA;AACA;;;AAEAd,EAAAA,SAAS,CAAC;AAAA;;AAAA,kCAAMQ,UAAU,CAACO,OAAjB,wDAAM,oBAAoBC,cAApB,CAAmC;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAnC,CAAN;AAAA,GAAD,CAAT;;AAEA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAAA,QAC1BC,SAD0B,GACbN,IAAI,CAACO,KAAL,CAAWC,QADE,CAC1BF,SAD0B;AAGjCL,IAAAA,SAAS,CAAC;AACRL,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAES;AAAT,OADH;AAERG,MAAAA,WAAW,EAAE,qBAACC,UAAD,QAA+C;AAAA,YAA3BC,eAA2B,QAA3BA,eAA2B;AAC1DA,QAAAA,eAAe,CAACJ,KAAhB,CAAsBK,KAAtB,gCACKF,UAAU,CAACH,KAAX,CAAiBK,KADtB,sBAEKD,eAAe,CAACJ,KAAhB,CAAsBK,KAF3B;AAIA,eAAOD,eAAP;AACD;AARO,KAAD,CAAT;AAUH,GAbC;;AAeA,MAAGZ,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAEV,MAAID,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,WAAP;;AAEb,MAAIE,IAAI,IAAIA,IAAI,CAACO,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,GAA0B,CAAtC,EAAyC;AACrC,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BAEM;AAAK,QAAA,SAAS,EAAEtB,MAAM,CAACuB,YAAvB;AAAA,kBACKd,IAAI,CAACO,KAAL,CAAWK,KAAX,CAAiBG,GAAjB,CAAqB,UAACC,IAAD,EAAe;AACrC,8BAAO,QAAC,QAAD;AAAyB,YAAA,QAAQ,EAAIA,IAAI,CAACC;AAA1C,aAAe7B,MAAM,EAArB;AAAA;AAAA;AAAA;AAAA,mBAAP;AAA0D,SADzD;AADL;AAAA;AAAA;AAAA;AAAA,eAFN,eAOE;AAAK,QAAA,SAAS,EAAEG,MAAM,CAAC2B,WAAvB;AAAoC,QAAA,GAAG,EAAEvB,UAAzC;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAGJ,MAAM,CAAC4B,cAA3B;AAA2C,UAAA,OAAO,EAAE;AAAA,mBAAMd,oBAAoB,EAA1B;AAAA,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAaH;AACF,CAjDM;;GAAMX,K;UAGiCL,Q;;;KAHjCK,K","sourcesContent":["import React, {useRef, useEffect} from \"react\";\nimport uniqid from 'uniqid';\nimport { useQuery } from \"@apollo/client\";\nimport {Spinner} from \"../Spinner/Spinner\";\nimport styles from './Users.module.css';\nimport {UserCard} from './UserCard';\nimport {GET_USERS_INFO} from '../../lib/queries/getUsersInfo';\n\n\nexport const Users = () => {\n  const messageRef = useRef<HTMLDivElement>(null);\n  \n  const { loading, error, data, fetchMore } = useQuery(GET_USERS_INFO, {\n    variables: { after: null }\n  });\n  // const handleLoadMoreClick = (event: any) => {\n  //   console.log(messageRef.current && messageRef.current.contains(event.target));\n  //   if (messageRef.current && messageRef.current.contains(event.target)) {\n  //     messageRef.current.scrollIntoView({  behavior: 'smooth' });\n  //   }\n  // }\n \n  useEffect(() => messageRef.current?.scrollIntoView({behavior: \"smooth\"}));\n  \n  const loadMoreUsersHandler = () => {\n    const {endCursor} = data.users.pageInfo;\n      \n    fetchMore({\n      variables: { after: endCursor },\n      updateQuery: (prevResult: any, { fetchMoreResult }: any) => {\n        fetchMoreResult.users.edges = [\n          ...prevResult.users.edges,\n          ...fetchMoreResult.users.edges\n        ];\n        return fetchMoreResult;\n      }});\n     \n}\n\n  if(error) return <div>Error</div>;\n\n  if (loading) return <Spinner/>;\n  \n  if (data && data.users.edges.length > 0) {\n      return (\n        <React.Fragment>\n          {/* <Suspense fallback={<Spinner />}> */}\n              <div className={styles.usersWrapper}>\n                  {data.users.edges.map((user: any) => { \n                  return <UserCard key={uniqid()} userInfo = {user.node}/> })}\n              </div>\n            {/* </Suspense> */}\n          <div className={styles.userActions} ref={messageRef}>\n            <button className= {styles.loadMoreButton} onClick={() => loadMoreUsersHandler()}> Load more..</button>\n          </div>\n        </React.Fragment>\n      );\n  }\n} "]},"metadata":{},"sourceType":"module"}